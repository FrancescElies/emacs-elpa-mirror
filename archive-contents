(1
 (ac-ispell . [(20151031 1926) ((auto-complete (1 4)) (cl-lib (0 5))) "ispell completion source for auto-complete" single])
 (ace-jump-helm-line . [(20160918 1136) ((avy (0 4 0)) (helm (1 6 3))) "Ace-jump to a candidate in helm window" single])
 (ace-jump-mode . [(20140616 115) nil "a quick cursor location minor mode for emacs" single])
 (ace-link . [(20161203 1059) ((avy (0 2 0))) "Quickly follow links" single])
 (ace-window . [(20161018 1624) ((avy (0 2 0))) "Quickly switch windows." single])
 (adaptive-wrap . [(0 5) nil "Smart lineprefix" single])
 (aggressive-indent . [(20161201 1001) ((emacs (24 1)) (cl-lib (0 5))) "Minor mode to aggressively keep your code always indented" single])
 (alert . [(20170106 1020) ((gntp (0 1)) (log4e (0 3 0))) "Growl-style notification system for Emacs" single])
 (anaconda-mode . [(20161121 1137) ((emacs (24)) (pythonic (0 1 0)) (dash (2 6 0)) (s (1 9)) (f (0 16 2))) "Code navigation, documentation lookup and completion for Python" single])
 (anzu . [(20161017 907) ((emacs (24 3))) "Show number of matches in mode-line while searching" single])
 (async . [(20161103 1036) nil "Asynchronous processing in Emacs" tar])
 (auctex . [(11 90 0) nil "Integrated environment for *TeX*" tar])
 (auto-compile . [(20160711 1012) ((emacs (24 3)) (dash (2 12 1)) (packed (0 5 3))) "automatically compile Emacs Lisp libraries" single])
 (auto-complete . [(20161029 643) ((popup (0 5 0)) (cl-lib (0 5))) "Auto Completion for GNU Emacs" tar])
 (auto-dictionary . [(20150410 910) nil "automatic dictionary switcher for flyspell" single])
 (auto-highlight-symbol . [(20130313 243) nil "Automatic highlighting current symbol minor mode" single])
 (auto-yasnippet . [(20160925 225) ((yasnippet (0 8 0))) "Quickly create disposable yasnippets" single])
 (avy . [(20160814 250) ((emacs (24 1)) (cl-lib (0 5))) "tree-based completion" single])
 (bbdb . [(20161001 2212) nil "The Insidious Big Brother Database for GNU Emacs" tar])
 (bind-key . [(20161218 1520) nil "A simple way to manage personal keybindings" single])
 (bind-map . [(20161207 711) ((emacs (24 3))) "Bind personal keymaps in multiple locations" single])
 (bundler . [(20160815 215) ((inf-ruby (2 1)) (cl-lib (0 5))) "Interact with Bundler from Emacs" single])
 (chruby . [(20161222 430) ((cl-lib (0 5))) "Emacs integration for chruby" single])
 (cider . [(20170112 26) ((emacs (24 4)) (clojure-mode (5 6 0)) (pkg-info (0 4)) (queue (0 1 1)) (spinner (1 7)) (seq (2 16))) "Clojure Interactive Development Environment that Rocks" tar])
 (cider-eval-sexp-fu . [(20160907 100) ((emacs (24)) (highlight (0)) (eval-sexp-fu (0 4 0))) "Briefly highlights an evaluated sexp." single])
 (circe . [(20170107 632) ((cl-lib (0 5))) "Client for IRC in Emacs" tar])
 (cl-generic . [(0 3) nil "Forward cl-generic compatibility for Emacs<25" single])
 (clang-format . [(20170117 930) ((cl-lib (0 3))) "Format code using clang-format" single])
 (clean-aindent-mode . [(20150816 2029) nil "Simple indent and unindent, trims indent white-space" single])
 (clj-refactor . [(20170114 1148) ((emacs (24 4)) (s (1 8 0)) (dash (2 4 0)) (yasnippet (0 6 1)) (paredit (24)) (multiple-cursors (1 2 2)) (clojure-mode (5 6 1)) (cider (0 11 0)) (edn (1 1 2)) (inflections (2 3)) (hydra (0 13 2))) "A collection of clojure refactoring functions" tar])
 (clojure-mode . [(20161221 523) ((emacs (24 4))) "Major mode for Clojure code" single])
 (clojure-snippets . [(20161024 16) ((yasnippet (0 10 0))) "Yasnippets for clojure" tar])
 (cmake-mode . [(20160928 505) nil "major-mode for editing CMake sources" single])
 (cmm-mode . [(20150224 2346) nil "Major mode for C source code" single])
 (coffee-mode . [(20161124 832) ((emacs (24 3))) "Major mode for CoffeeScript code" single])
 (column-enforce-mode . [(20170103 1231) nil "Highlight text that extends beyond a  column" single])
 (command-log-mode . [(20151208 852) nil "log keyboard commands to buffer" single])
 (common-lisp-snippets . [(20161231 1557) ((yasnippet (0 8 0))) "Yasnippets for Common Lisp" tar])
 (company . [(20170112 2005) ((emacs (24 3))) "Modular text completion framework" tar])
 (company-anaconda . [(20160809 705) ((company (0 8 0)) (anaconda-mode (0 1 1)) (cl-lib (0 5 0)) (dash (2 6 0)) (s (1 9))) "Anaconda backend for company-mode" single])
 (company-auctex . [(20161025 24) ((yasnippet (0 8 0)) (company (0 8 0)) (auctex (11 87))) "Companycompletion for AUCTeX" single])
 (company-c-headers . [(20150801 901) ((emacs (24 1)) (company (0 8))) "Company mode backend for C/C++ header files" single])
 (company-cabal . [(20151216 720) ((cl-lib (0 5)) (company (0 8 0)) (emacs (24))) "company-mode cabal backend" tar])
 (company-emoji . [(20161230 1937) ((cl-lib (0 5)) (company (0 8 0))) "company-mode backend for emoji" tar])
 (company-ghc . [(20160315 710) ((cl-lib (0 5)) (company (0 8 0)) (ghc (5 4 0 0)) (emacs (24))) "companymod backend" single])
 (company-ghci . [(20160310 1800) ((company (0 8 11)) (haskell-mode (13))) "company backend which uses the current ghci process." single])
 (company-quickhelp . [(20161113 1226) ((emacs (24 4)) (company (0 8 9)) (pos-tip (0 4 6))) "Popup documentation for completion candidates" single])
 (company-statistics . [(20161213 159) ((emacs (24 3)) (company (0 8 5))) "Sort candidates using completion history" single])
 (company-tern . [(20161004 1147) ((company (0 8 0)) (tern (0 0 1)) (dash (2 8 0)) (dash-functional (2 8 0)) (s (1 9 0)) (cl-lib (0 5 0))) "Tern backend for company-mode" single])
 (company-web . [(20160502 658) ((company (0 8 0)) (dash (2 8 0)) (cl-lib (0 5 0)) (web-completion-data (0 1 0))) "Company version of ac-html, complete for web,html,emmet,jade,slim modes" tar])
 (csv-mode . [(1 6) nil "Major mode for editing comma/char separated values" single])
 (cython-mode . [(20140705 1229) nil "Major mode for editing Cython files" single])
 (dactyl-mode . [(20140906 1025) nil "Major mode for editing Pentadactyl config files" single])
 (dash . [(20161121 55) nil "A modern list library for Emacs" single])
 (dash-functional . [(20160615 1351) ((dash (2 0 0)) (emacs (24))) "Collection of useful combinators for Emacs Lisp" single])
 (deft . [(20160610 1739) nil "quickly browse, filter, and edit plain text notes" single])
 (diff-hl . [(20161102 1726) ((cl-lib (0 2)) (emacs (24 3))) "Highlight uncommitted changes using VC" tar])
 (diminish . [(20151215 915) nil "Diminished modes are minor modes with no modeline display" single])
 (disaster . [(20130509 1055) nil "Disassemble C/C++ code under cursor in Emacs" single])
 (docker . [(20170114 440) ((emacs (24 4)) (dash (2 12 1)) (docker-tramp (0 1)) (magit-popup (2 6 0)) (s (1 11 0)) (tablist (0 70)) (json-mode (1 7 0))) "Emacs interface to Docker" tar])
 (docker-tramp . [(20161020 2220) ((emacs (24)) (cl-lib (0 5))) "TRAMP integration for docker containers" tar])
 (dockerfile-mode . [(20161209 631) nil "Major mode for editing Docker's Dockerfiles" single])
 (dumb-jump . [(20161218 110) ((emacs (24 3)) (f (0 17 3)) (s (1 11 0)) (dash (2 9 0)) (popup (0 5 3))) "jump to definition for multiple languages without configuration." single])
 (edn . [(20160215 419) ((cl-lib (0 3)) (emacs (24 1)) (peg (0 6))) "Support for reading and writing the edn data format from elisp" single])
 (ein . [(20170117 455) ((websocket (1 5)) (request (0 2)) (cl-generic (0 2))) "Emacs IPython Notebook" tar])
 (elfeed . [(20170116 1128) ((emacs (24 3))) "an Emacs Atom/RSS feed reader" tar])
 (elfeed-goodies . [(20160926 209) ((popwin (1 0 0)) (powerline (2 2)) (elfeed (2 0 0)) (cl-lib (0 5)) (noflet (0 0 10)) (ace-jump-mode (2 0))) "Elfeed goodies" tar])
 (elfeed-org . [(20160814 314) ((elfeed (1 1 1)) (org (8 2 7)) (dash (2 10 0)) (s (1 9 0))) "Configure elfeed with one or more org-mode files" single])
 (elfeed-web . [(20161030 1731) ((simple-httpd (1 4 3)) (elfeed (1 4 0)) (emacs (24 1))) "web interface to Elfeed" tar])
 (elisp-slime-nav . [(20160128 1109) ((cl-lib (0 2))) "Make M, work in elisp like they do in slime" single])
 (elm-mode . [(20161210 49) ((f (0 17)) (let-alist (1 0 4)) (s (1 7 0)) (emacs (24))) "Major mode for Elm" tar])
 (elpa-mirror . [(20160917 10) nil "Create local package repository" single])
 (emmet-mode . [(20161113 2158) nil "Unofficial Emmet's support for emacs" single])
 (emoji-cheat-sheet-plus . [(20150617 631) ((emacs (24)) (helm (1 6 4))) "emojisheet for emacs" tar])
 (emojify . [(20161124 940) ((seq (1 11)) (ht (2 0)) (emacs (24 3))) "Display emojis in Emacs" tar])
 (engine-mode . [(20161104 650) nil "Define and query search engines from within Emacs." single])
 (epl . [(20150517 433) ((cl-lib (0 3))) "Emacs Package Library" single])
 (erc-hl-nicks . [(20160202 1150) nil "ERC nick highlighter that ignores uniquifying chars when colorizing" single])
 (erc-image . [(20150914 314) nil "Show received image urls in the ERC buffer" single])
 (erc-social-graph . [(20150508 504) nil "A social network graph module for ERC." single])
 (erc-terminal-notifier . [(20140115 224) nil "OSX notifications via the terminal-notifier gem for Emacs ERC." single])
 (erc-view-log . [(20140227 1239) nil "Major mode for viewing ERC logs" single])
 (erc-yt . [(20150426 549) ((dash (2 10 0))) "An erc module to display youtube links nicely" single])
 (es-mode . [(20161103 1024) ((dash (2 11 0)) (cl-lib (0 5)) (spark (1 0))) "A major mode for editing Elasticsearch queries" tar])
 (esh-help . [(20140107 222) ((dash (1 4 0))) "Add some help functions and support for Eshell" single])
 (eshell-prompt-extras . [(20160926 1723) nil "Display extra information for your eshell prompt." single])
 (eshell-z . [(20170116 2038) ((cl-lib (0 5))) "cd to frequent directory in eshell" single])
 (eval-sexp-fu . [(20131230 1351) ((highlight (0))) "Tiny functionality enhancements for evaluating sexps." single])
 (evil . [(20160827 1510) ((undo-tree (0 6 3)) (goto-chg (1 6))) "Extensible Vi layer for Emacs." tar])
 (evil-anzu . [(20150124 1609) ((evil (1 0 0)) (anzu (0 46))) "anzu for evil-mode" single])
 (evil-args . [(20140329 1429) ((evil (1 0 8))) "Motions and text objects for delimited arguments in Evil." single])
 (evil-ediff . [(20160821 1950) ((evil (1 2 3))) "Make ediff a little evil" single])
 (evil-escape . [(20170115 1343) ((emacs (24)) (evil (1 0 9)) (cl-lib (0 5))) "Escape from anything with a customizable key sequence" single])
 (evil-exchange . [(20160812 843) ((evil (1 2 8)) (cl-lib (0 3))) "Exchange text more easily within Evil" single])
 (evil-iedit-state . [(20160905 1908) ((evil (1 0 9)) (iedit (0 97))) "Evil states to interface iedit mode." single])
 (evil-indent-plus . [(20151109 1106) ((evil (0)) (cl-lib (0 5))) "Evil textobjects based on indentation" single])
 (evil-lisp-state . [(20160403 1948) ((evil (1 0 9)) (bind-map (0)) (smartparens (1 6 1))) "An evil state to edit Lisp code" single])
 (evil-magit . [(20161130 847) ((evil (1 2 3)) (magit (2 6 0))) "evil-based key bindings for magit" single])
 (evil-matchit . [(20161130 454) ((evil (1 0 7))) "Vim matchit ported to Evil" tar])
 (evil-mc . [(20170113 19) ((emacs (24 3)) (evil (1 2 12)) (cl-lib (0 5))) "Multiple cursors for evil-mode" tar])
 (evil-nerd-commenter . [(20161031 409) nil "Comment/uncomment lines efficiently. Like Nerd Commenter in Vim" tar])
 (evil-numbers . [(20140606 551) nil "increment/decrement numbers like in vim" single])
 (evil-search-highlight-persist . [(20160912 807) ((highlight (0))) "Persistent highlights after search" single])
 (evil-surround . [(20170115 1604) ((evil (1 2 12))) "emulate surround.vim from Vim" single])
 (evil-tutor . [(20150102 2250) ((evil (1 0 9))) "Vimtutor adapted to Evil and wrapped in a major-mode" tar])
 (evil-unimpaired . [(0 1 -1 0 20160816 225919) ((dash (2 12 0)) (f (0 18 0))) "Pairs of handy bracket mappings." tar])
 (evil-visual-mark-mode . [(20150202 1000) ((evil (1 0 9)) (dash (2 10))) "Display evil marks on buffer" single])
 (evil-visualstar . [(20160222 1648) ((evil (0))) "Starts a * or # search from the visual selection" single])
 (exec-path-from-shell . [(20161229 1338) nil "Get environment variables such as $PATH from the shell" single])
 (expand-region . [(20170122 2241) nil "Increase selected region by semantic units." tar])
 (eyebrowse . [(20161226 1438) ((dash (2 7 0)) (emacs (24 3 1))) "Easy window config switching" single])
 (f . [(20161002 800) ((s (1 7 0)) (dash (2 2 0))) "Modern API for working with files and directories" single])
 (fancy-battery . [(20150101 404) ((emacs (24 1))) "Fancy battery display" single])
 (fasd . [(20161216 831) nil "Emacs integration for the command-line productivity booster `fasd'" single])
 (fill-column-indicator . [(20151030 1233) nil "Graphically indicate the fill column" single])
 (fix-word . [(20161231 1555) ((emacs (24 1)) (cl-lib (0 5))) "Convenient word transformation" single])
 (flx . [(20151030 1112) ((cl-lib (0 3))) "fuzzy matching with good sorting" single])
 (flx-ido . [(20151030 1112) ((flx (0 1)) (cl-lib (0 3))) "flx integration for ido" single])
 (flycheck . [(20170117 1430) ((dash (2 12 1)) (pkg-info (0 4)) (let-alist (1 0 4)) (seq (1 11)) (emacs (24 3))) "Onfly syntax checking" tar])
 (flycheck-elm . [(20160717 257) ((flycheck (0 29 -3)) (emacs (24 4))) "Flycheck support for the elm language" single])
 (flycheck-haskell . [(20160524 117) ((emacs (24 3)) (flycheck (0 25)) (haskell-mode (13 7)) (dash (2 4 0)) (seq (1 11)) (let-alist (1 0 1))) "Flycheck: Automatic Haskell configuration" tar])
 (flycheck-pos-tip . [(20161112 912) ((emacs (24 1)) (flycheck (0 22)) (pos-tip (0 4 6))) "Display Flycheck errors in GUI tooltips" single])
 (flyspell-correct . [(20161031 1134) nil "correcting words with flyspell via custom interface" tar])
 (flyspell-correct-helm . [(20161031 1134) ((flyspell-correct (0 4 0)) (helm (1 9 0))) "correcting words with flyspell via helm interface" single])
 (fountain-mode . [(20161207 141) ((emacs (24 4))) "Major mode for screenwriting in Fountain markup" single])
 (fringe-helper . [(20140620 1409) nil "helper functions for fringe bitmaps" single])
 (ggtags . [(20161022 251) ((emacs (24)) (cl-lib (0 5))) "emacs frontend to GNU Global source code tagging system" single])
 (gh . [(20161119 2004) ((emacs (24 3)) (s (1 9 0)) (dash (2 9 0)) (pcache (0 4 1)) (logito (0 1)) (marshal (0 6 3))) "A GitHub library for Emacs" tar])
 (gh-md . [(20151207 940) ((emacs (24))) "Render markdown using the Github api" single])
 (ghc . [(20160808 813) ((haskell-mode (13 0))) "Sub mode for Haskell mode" tar])
 (gist . [(20161127 855) ((emacs (24 1)) (gh (0 9 2))) "Emacs integration for gist.github.com" single])
 (git-commit . [(20170112 334) ((emacs (24 4)) (dash (20161121 55)) (with-editor (20161231 826))) "Edit Git commit messages" single])
 (git-gutter+ . [(20151204 923) ((git-commit (0)) (dash (0))) "Manage Git hunks straight from the buffer" single])
 (git-gutter . [(20161105 656) ((emacs (24 3))) "Port of Sublime Text plugin GitGutter" single])
 (git-gutter-fringe+ . [(20140729 403) ((git-gutter+ (0 1)) (fringe-helper (1 0 1))) "Fringe version of git-gutter+.el" single])
 (git-gutter-fringe . [(20170112 2133) ((git-gutter (0 88)) (fringe-helper (0 1 1)) (cl-lib (0 5)) (emacs (24))) "Fringe version of git-gutter.el" single])
 (git-link . [(20161203 1823) nil "Get the GitHub/Bitbucket/GitLab URL for a buffer location" single])
 (git-messenger . [(20170101 2040) ((emacs (24 3)) (popup (0 5 0))) "Pop up last commit information of current line" single])
 (git-timemachine . [(20161125 142) ((emacs (24 3))) "Walk through git revisions of a file" single])
 (gitattributes-mode . [(20160319 302) nil "Major mode for editing .gitattributes files" single])
 (gitconfig-mode . [(20160710 1913) nil "Major mode for editing .gitconfig files" single])
 (github-browse-file . [(20160205 627) ((cl-lib (0 5))) "View the file you're editing on GitHub" single])
 (github-clone . [(20160622 2010) ((gh (0 7 2)) (magit (2 1 0)) (emacs (24 4))) "Fork and clone github repos" single])
 (github-search . [(20160822 1328) ((magit (2 1 0)) (gh (1 0 0))) "Clone repositories by searching github" single])
 (gitignore-mode . [(20160319 302) nil "Major mode for editing .gitignore files" single])
 (gmail2bbdb . [(20161104 2041) nil "import email and name into bbdb from vcard." single])
 (gntp . [(20141024 1950) nil "Growl Notification Protocol for Emacs" single])
 (gnuplot . [(20141231 1337) nil "drive gnuplot from within emacs" tar])
 (golden-ratio . [(20150819 420) nil "Automatic resizing of Emacs windows to the golden ratio" single])
 (google-translate . [(20161206 1408) nil "Emacs interface to Google Translate." tar])
 (goto-chg . [(20131228 659) nil "goto last change" single])
 (haml-mode . [(20170104 2224) ((ruby-mode (1 0))) "Major mode for editing Haml files" single])
 (haskell-mode . [(20170116 407) ((emacs (24 3))) "A Haskell editing mode" tar])
 (haskell-snippets . [(20160918 1722) ((cl-lib (0 5)) (yasnippet (0 8 0))) "Yasnippets for Haskell" tar])
 (helm . [(20170118 202) ((emacs (24 4)) (async (1 9)) (popup (0 5 3)) (helm-core (2 5 0))) "Helm is an Emacs incremental and narrowing framework" tar])
 (helm-ag . [(20161203 523) ((emacs (24 4)) (helm (2 0))) "the silver searcher with helm interface" single])
 (helm-c-yasnippet . [(20160823 611) ((helm (1 7 7)) (yasnippet (0 8 0)) (cl-lib (0 3))) "helm source for yasnippet.el" single])
 (helm-company . [(20161121 2111) ((helm (1 5 9)) (company (0 6 13))) "Helm interface for company-mode" single])
 (helm-core . [(20170116 2331) ((emacs (24 4)) (async (1 9))) "Development files for Helm" tar])
 (helm-css-scss . [(20140626 1725) ((helm (1 0)) (emacs (24))) "CSS/SCSS/LESS Selectors with helm interface" single])
 (helm-descbinds . [(20160916 713) ((helm (1 5))) "A convenient `describe-bindings' with `helm'" single])
 (helm-flx . [(20170110 957) ((emacs (24 4)) (helm (1 7 9)) (flx (0 5))) "Sort helm candidates by flx score" single])
 (helm-gitignore . [(20150517 2056) ((gitignore-mode (1 1 0)) (helm (1 7 0)) (request (0 1 0)) (cl-lib (0 5))) "Generate .gitignore files with gitignore.io." single])
 (helm-gtags . [(20170115 2129) ((emacs (24 4)) (helm (2 0))) "GNU GLOBAL helm interface" single])
 (helm-hoogle . [(20161026 2234) ((helm (1 6 2)) (emacs (24 4))) "Use helm to navigate query results from Hoogle" single])
 (helm-make . [(20161109 1107) ((helm (1 5 3)) (projectile (0 11 0))) "Select a Makefile target with helm" single])
 (helm-mode-manager . [(20151124 138) ((helm (1 5 3))) "Select and toggle major and minor modes with helm" single])
 (helm-projectile . [(20170113 209) ((helm (1 7 7)) (projectile (0 14 0)) (cl-lib (0 3))) "Helm integration for Projectile" single])
 (helm-pydoc . [(20160917 2242) ((helm-core (2 0)) (emacs (24 4))) "pydoc with helm interface" tar])
 (helm-swoop . [(20160619 953) ((helm (1 0)) (emacs (24 3))) "Efficiently hopping squeezed lines powered by helm interface" single])
 (helm-themes . [(20160917 2245) ((helm-core (2 0)) (emacs (24 4))) "Color theme selection with helm interface" single])
 (help-fns+ . [(20170101 959) nil "Extensions to `help-fns.el'." single])
 (hexrgb . [(20170101 1007) nil "Functions to manipulate colors, including RGB hex strings." single])
 (hide-comnt . [(20170116 1012) nil "Hide/show comments in code." single])
 (highlight . [(20170101 1010) nil "Highlighting commands." single])
 (highlight-indentation . [(20161012 209) nil "Minor modes for highlighting indentation" single])
 (highlight-numbers . [(20160717 1228) ((emacs (24)) (parent-mode (2 0))) "Highlight numbers in source code" single])
 (highlight-parentheses . [(20151107 2316) nil "highlight surrounding parentheses" single])
 (hindent . [(20160905 243) ((cl-lib (0 5))) "Indent haskell code using the hindent program" single])
 (hl-todo . [(20161102 1337) nil "highlight TODO and similar keywords" single])
 (hlint-refactor . [(20151124 1241) nil "Apply HLint suggestions" single])
 (ht . [(20161015 1945) ((dash (2 12 0))) "The missing hash table library for Emacs" single])
 (htmlize . [(20161211 1019) nil "Convert buffer text and decorations to HTML." single])
 (hungry-delete . [(20161128 2238) nil "hungry delete minor mode" single])
 (hy-mode . [(20151025 543) nil "Major mode for Hy code" single])
 (hydra . [(20170108 148) ((cl-lib (0 5))) "Make bindings that stick around." tar])
 (ido-vertical-mode . [(20160429 1037) nil "Makes ido-mode display vertically." single])
 (iedit . [(20161228 2111) nil "Edit multiple regions in the same way simultaneously." tar])
 (indent-guide . [(20161226 2332) nil "show vertical lines to guide indentation" single])
 (inf-ruby . [(20170115 1602) nil "Run a Ruby process in a buffer" single])
 (inflections . [(20161126 1727) ((cl-lib (0 5)) (emacs (24))) "convert english words between singular and plural" single])
 (info+ . [(20170109 1240) nil "Extensions to `info.el'." single])
 (intero . [(20170110 430) ((flycheck (0 25)) (company (0 8)) (emacs (24 3)) (haskell-mode (13 0))) "Complete development mode for Haskell" single])
 (jira-markup-mode . [(20150601 1409) nil "Emacs Major mode for JIRAformatted text files" single])
 (js-doc . [(20160715 634) nil "Insert JsDoc style comment easily" single])
 (js2-mode . [(20170116 733) ((emacs (24 1)) (cl-lib (0 5))) "Improved JavaScript editing mode" tar])
 (js2-refactor . [(20161102 1108) ((js2-mode (20101228)) (s (1 9 0)) (multiple-cursors (1 0 0)) (dash (1 0 0)) (s (1 0 0)) (yasnippet (0 9 0 1))) "A JavaScript refactoring library for emacs." tar])
 (json-mode . [(20160803 1606) ((json-reformat (0 0 5)) (json-snatcher (1 0 0))) "Major mode for editing JSON files" single])
 (json-reformat . [(20160212 53) nil "Reformatting tool for JSON" single])
 (json-snatcher . [(20150511 2047) ((emacs (24))) "Grabs the path to JSON values in a JSON file" single])
 (launchctl . [(20150518 609) ((emacs (24 1))) "Interface to launchctl on Mac OS X." single])
 (less-css-mode . [(20160930 2153) nil "Major mode for editing LESS CSS files (lesscss.org)" single])
 (let-alist . [(1 0 4) ((emacs (24 1))) "Easily letlist by their names" single])
 (link-hint . [(20161216 857) ((avy (0 3 0)) (emacs (24 1)) (cl-lib (0 5))) "Use avy to open or copy visible urls." single])
 (linum-relative . [(20160510 118) nil "display relative line number in emacs." single])
 (live-py-mode . [(20170116 1607) ((emacs (24 1))) "Live Coding in Python" tar])
 (livid-mode . [(20131116 544) ((skewer-mode (1 5 3)) (s (1 8 0))) "Live browser eval of JavaScript every time a buffer changes" single])
 (log4e . [(20150105 505) nil "provide logging framework for elisp" single])
 (logito . [(20120225 1255) ((eieio (1 3))) "logging library for Emacs" single])
 (lorem-ipsum . [(20140911 1408) nil "Insert dummy pseudo Latin text." single])
 (macrostep . [(20161120 1306) ((cl-lib (0 5))) "interactive macro expander" tar])
 (magit . [(20170114 1211) ((emacs (24 4)) (async (20161103 1036)) (dash (20161121 55)) (with-editor (20161231 826)) (git-commit (20161227 125)) (magit-popup (20170104 557))) "A Git porcelain inside Emacs" tar])
 (magit-gh-pulls . [(20161020 249) ((emacs (24)) (gh (0 9 1)) (magit (2 1 0)) (pcache (0 2 3)) (s (1 6 1))) "GitHub pull requests extension for Magit" single])
 (magit-gitflow . [(20160809 1335) ((magit (2 1 0)) (magit-popup (2 2 0))) "gitflow extension for magit" single])
 (magit-popup . [(20170104 924) ((emacs (24 4)) (async (20161103 1036)) (dash (20161121 55))) "Define prefixsuffix command combos" tar])
 (markdown-mode . [(20161222 1416) ((emacs (24)) (cl-lib (0 5))) "Major mode for Markdown-formatted text" single])
 (markdown-toc . [(20161214 1011) ((s (1 9 0)) (dash (2 11 0)) (markdown-mode (2 1))) "A simple TOC generator for markdown file" tar])
 (marshal . [(20160807 1954) ((eieio (1 4)) (json (1 3)) (ht (2 1))) "eieio extension for automatic (un)marshalling" single])
 (minitest . [(20160628 1120) ((dash (1 0 0))) "An Emacs mode for ruby minitest files" tar])
 (mmm-mode . [(20150828 1716) nil "Allow Multiple Major Modes in a buffer" tar])
 (monokai-theme . [(20160902 1417) nil "A fruity color theme for Emacs." single])
 (move-text . [(20170101 125) nil "Move current line or region with Mdown." single])
 (multi-term . [(20160619 233) nil "Managing multiple terminal buffers in Emacs." single])
 (multiple-cursors . [(20161021 1431) ((cl-lib (0 5))) "Multiple cursors for Emacs." tar])
 (mwim . [(20161004 647) nil "Switch between the beginning/end of line or code" single])
 (neotree . [(20170110 321) nil "A tree plugin like NerdTree for Vim" tar])
 (nginx-mode . [(20161023 223) nil "major mode for editing nginx config files" single])
 (noflet . [(20141102 654) nil "locally override functions" single])
 (oauth2 . [(0 11) nil "OAuth 2.0 Authorization Protocol" single])
 (ob-http . [(20161208 222) ((s (1 9 0)) (cl-lib (0 5))) "http request in org-mode babel" tar])
 (ob-ipython . [(20160918 1001) ((s (1 9 0)) (dash (2 10 0)) (dash-functional (1 2 0)) (f (0 17 2)) (emacs (24))) "org-babel functions for IPython evaluation" tar])
 (ob-mongo . [(20161130 152) ((org (8))) "Execute mongodb queries within org-mode blocks." single])
 (ob-restclient . [(20160323 2305) ((restclient (0))) "orgmode" single])
 (open-junk-file . [(20161210 314) nil "Open a junk (memo) file to tryerror" single])
 (org . [(20161224) nil "Outline-based notes management and organizer" tar])
 (org-bullets . [(20140918 1137) nil "Show bullets in org8 characters" single])
 (org-download . [(20170105 1740) ((async (1 2))) "Image dragmode" single])
 (org-plus-contrib . [(20161224) nil "Outline-based notes management and organizer" tar])
 (org-pomodoro . [(20161119 226) ((alert (0 5 10)) (cl-lib (0 5))) "Pomodoro implementation for org-mode." tar])
 (org-present . [(20141109 1756) ((org (7))) "Minimalist presentation minormode." single])
 (org-projectile . [(20161205 1508) ((projectile (0 11 0)) (dash (2 10 0)) (emacs (24))) "Repository todo management for org-mode" tar])
 (orgit . [(20161105 857) ((emacs (24 4)) (dash (2 13 0)) (magit (2 10 0)) (org (8 3 3))) "support for Org links to Magit buffers" single])
 (osx-dictionary . [(20161207 810) ((cl-lib (0 5))) "Interface for OSX Dictionary.app" tar])
 (osx-trash . [(20160520 600) ((emacs (24 1))) "System trash for OS X" tar])
 (ox-pandoc . [(20161125 35) ((org (8 2)) (emacs (24)) (dash (2 8)) (ht (2 0))) "org exporter for pandoc." single])
 (ox-reveal . [(20161027 226) ((org (20150330))) "reveal.js Presentation Back-End for Org Export Engine" single])
 (package-build . [(20160903 1832) ((cl-lib (0 5))) "Tools for assembling a package archive" single])
 (packed . [(20160523 600) ((emacs (24 3)) (dash (2 12 1))) "package manager agnostic Emacs Lisp package utilities" single])
 (palimpsest . [(20170118 502) nil "Various deletion strategies when editing" single])
 (pandoc-mode . [(20161104 1521) ((hydra (0 10 0)) (dash (2 10 0))) "Minor mode for interacting with Pandoc" tar])
 (paradox . [(20161117 502) ((emacs (24 4)) (seq (1 7)) (let-alist (1 0 3)) (spinner (1 7 3)) (hydra (0 13 2))) "A modern Packages Menu. Colored, with package ratings, and customizable." tar])
 (paredit . [(20160615 1325) nil "minor mode for editing parentheses" single])
 (parent-mode . [(20150824 1600) nil "get major mode's parent modes" single])
 (pbcopy . [(20150224 2059) nil "Emacs Interface to pbcopy" single])
 (pcache . [(20170105 1414) ((eieio (1 3))) "persistent caching for Emacs." single])
 (pcre2el . [(20161120 1303) ((emacs (24)) (cl-lib (0 3))) "regexp syntax converter" single])
 (pdf-tools . [(20161207 521) ((emacs (24 3)) (tablist (0 70)) (let-alist (1 0 4))) "Support library for PDF documents." tar])
 (peg . [(20150707 2341) nil "Parsing Expression Grammars in Emacs Lisp" single])
 (persp-mode . [(20170115 651) nil "windows/buffers sets shared among frames + save/load." single])
 (pip-requirements . [(20160930 2032) ((dash (2 8 0))) "A major mode for editing pip requirements files." single])
 (pkg-info . [(20150517 443) ((epl (0 8))) "Information about packages" single])
 (popup . [(20160709 729) ((cl-lib (0 5))) "Visual Popup User Interface" single])
 (popwin . [(20150315 600) nil "Popup Window Manager." single])
 (pos-tip . [(20150318 813) nil "Show tooltip at point" single])
 (powerline . [(20161121 2320) ((cl-lib (0 2))) "Rewrite of Powerline" tar])
 (prodigy . [(20160929 2302) ((s (1 8 0)) (dash (2 4 0)) (f (0 14 0)) (emacs (24))) "Manage external services from within Emacs" single])
 (projectile . [(20170106 606) ((pkg-info (0 4))) "Manage and navigate projects in Emacs easily" single])
 (pug-mode . [(20161221 1154) ((emacs (24 3))) "Major mode for jade/pug template files" single])
 (py-isort . [(20160925 318) nil "Use isort to sort the imports in a Python buffer" single])
 (pyenv-mode . [(20160221 1123) ((pythonic (0 1 0))) "Integrate pyenv with python-mode" single])
 (pytest . [(20161014 815) ((s (1 9 0))) "Easy Python test running in Emacs" single])
 (pythonic . [(20160221 1123) ((emacs (24)) (cl-lib (0 5)) (dash (2 11)) (s (1 9)) (f (0 17 2))) "Utility functions for writing pythonic emacs package." single])
 (pyvenv . [(20160527 442) nil "Python virtual environment interface" single])
 (quelpa . [(20160818 2249) ((package-build (0)) (emacs (24 3))) "Emacs Lisp packages built directly from source" tar])
 (queue . [(0 1 1) nil "Queue data structure" single])
 (rainbow-delimiters . [(20160430 2358) nil "Highlight brackets according to their depth" single])
 (rake . [(20161114 605) ((f (0 13 0)) (dash (1 5 0)) (cl-lib (0 5))) "Run rake commands" single])
 (ranger . [(20161002 2336) ((emacs (24 4))) "Make dired more like ranger" single])
 (rbenv . [(20141119 2349) nil "Emacs integration for rbenv" single])
 (rebox2 . [(20121113 500) nil "Handling of comment boxes in various styles." single])
 (redis . [(20150531 1248) ((emacs (24)) (cl-lib (0 5))) "Redis integration" single])
 (request . [(20170113 423) ((emacs (24)) (cl-lib (0 5))) "Compatible layer for URL request in Emacs" single])
 (restart-emacs . [(20161108 2239) nil "Restart emacs from within emacs" single])
 (restclient . [(20160801 707) nil "An interactive HTTP client for Emacs" single])
 (reveal-in-osx-finder . [(20150802 957) nil "Reveal file associated with buffer in OS X Finder" single])
 (robe . [(20160926 656) ((inf-ruby (2 3 0))) "Code navigation, documentation lookup and completion for Ruby" tar])
 (rspec-mode . [(20161129 1525) ((ruby-mode (1 0)) (cl-lib (0 4))) "Enhance ruby-mode for RSpec" tar])
 (rubocop . [(20161015 1200) ((emacs (24))) "An Emacs interface for RuboCop" single])
 (ruby-test-mode . [(20160930 9) ((ruby-mode (1 0)) (pcre2el (1 8))) "Minor mode for Behaviour and Test Driven" single])
 (ruby-tools . [(20151209 815) nil "Collection of handy functions for ruby-mode." tar])
 (rvm . [(20150402 742) nil "Emacs integration for rvm" single])
 (s . [(20160928 636) nil "The long lost Emacs string manipulation library." single])
 (sass-mode . [(20161006 2326) ((haml-mode (3 0 15)) (cl-lib (0 5))) "Major mode for editing Sass files" single])
 (scss-mode . [(20150107 1400) nil "Major mode for editing SCSS files" single])
 (seq . [(2 19) nil "Sequence manipulation functions" tar])
 (shell-pop . [(20161127 623) ((emacs (24))) "helps you to use shell easily on Emacs. Only one key action to work." single])
 (simple-httpd . [(20160902 1800) ((cl-lib (0 3))) "pure elisp HTTP server" single])
 (skewer-mode . [(20170122 938) ((simple-httpd (1 4 0)) (js2-mode (20090723)) (emacs (24))) "live browser JavaScript, CSS, and HTML interaction" tar])
 (slack . [(20170111 732) ((websocket (1 5)) (request (0 2 0)) (oauth2 (0 10)) (circe (2 2)) (alert (1 2)) (emojify (0 2))) "Slack client for Emacs" tar])
 (slim-mode . [(20140611 950) nil "Major mode for editing Slim files" single])
 (slime . [(20161109 640) ((cl-lib (0 5)) (macrostep (0 9))) "Superior Lisp Interaction Mode for Emacs" tar])
 (slime-company . [(20161229 743) ((slime (2 13)) (company (0 9 0))) "slime completion backend for company mode" single])
 (smartparens . [(20170104 410) ((dash (2 13 0)) (cl-lib (0 3))) "Automatic insertion, wrapping and paredit-like navigation with user defined pairs." tar])
 (smeargle . [(20161212 1558) ((emacs (24 3))) "Highlighting region by last updated time" single])
 (solarized-theme . [(20160515 442) ((emacs (24 1)) (cl-lib (0 5)) (dash (2 6 0))) "The Solarized color theme, ported to Emacs." tar])
 (spaceline . [(20170102 59) ((emacs (24 3)) (cl-lib (0 5)) (powerline (2 3)) (dash (2 11 0)) (s (1 10 0))) "Modeline configuration library for powerline" tar])
 (spacemacs-theme . [(20170106 539) nil "Color theme with a dark and light versions" tar])
 (spark . [(20160414 1901) ((emacs (24 3))) "sparkline generation" single])
 (spinner . [(1 7 3) nil "Add spinners and progressline for ongoing operations" single])
 (spray . [(20160304 1420) nil "a speed reading mode" single])
 (srefactor . [(20161130 2112) ((emacs (24 4))) "A refactoring tool based on Semantic parser framework" tar])
 (stickyfunc-enhance . [(20150429 1114) ((emacs (24 3))) "An enhancement to stock `semanticmode'" single])
 (string-inflection . [(20161220 1825) nil "underscore > lowerCamelCase conversion of names" single])
 (tablist . [(20160424 235) ((emacs (24 3))) "Extended tabulatedmode" tar])
 (tagedit . [(20161121 55) ((s (1 3 1)) (dash (1 0 3))) "Some pareditmode" single])
 (tern . [(20161222 850) ((json (1 2)) (cl-lib (0 5)) (emacs (24))) "Tern-powered JavaScript integration" single])
 (tide . [(20170107 1619) ((dash (2 10 0)) (flycheck (27)) (typescript-mode (0 1)) (cl-lib (0 5))) "Typescript Interactive Development Environment" tar])
 (toc-org . [(20161004 320) nil "add table of contents to orgtoc)" single])
 (typescript-mode . [(20161130 1944) nil "Major mode for editing typescript" single])
 (undo-tree . [(20161012 701) nil "Treat undo history as a tree" single])
 (use-package . [(20170116 1309) ((bind-key (1 0)) (diminish (0 44))) "A use-package declaration for simplifying your .emacs" single])
 (uuidgen . [(20140918 1601) nil "Provides various UUID generating functions" single])
 (vi-tilde-fringe . [(20141027 1942) ((emacs (24))) "Displays tildes in the fringe on empty lines a la Vi." single])
 (vimrc-mode . [(20150607 913) nil "Major mode for vimrc files" single])
 (volatile-highlights . [(20160611 1855) nil "Minor mode for visual feedback on some operations." single])
 (web-beautify . [(20161115 1447) nil "Format HTML, CSS and JavaScript/JSON" single])
 (web-completion-data . [(20160318 148) nil "Shared completion data for acweb" tar])
 (web-mode . [(20170114 906) nil "major mode for editing web templates" single])
 (websocket . [(20161113 1736) nil "Emacs WebSocket client and server" single])
 (which-key . [(20161222 1221) ((emacs (24 3))) "Display available keybindings in popup" single])
 (window-numbering . [(20160809 1110) nil "Numbered window shortcuts" single])
 (with-editor . [(20161231 826) ((emacs (24 4)) (async (1 9)) (dash (2 13 0))) "Use the Emacsclient as $EDITOR" tar])
 (ws-butler . [(20170111 1534) nil "Unobtrusively remove trailing whitespace." single])
 (xterm-color . [(20170102 1525) ((cl-lib (0 5))) "ANSI & XTERM 256 color support" single])
 (yaml-mode . [(20161105 814) ((emacs (24 1))) "Major mode for editing YAML files" single])
 (yapfify . [(20161202 1055) nil "(automatically) format python buffers using YAPF." single])
 (yasnippet . [(20170108 1830) ((cl-lib (0 5))) "Yet another snippet extension for Emacs." tar])
 (zenburn-theme . [(20161018 437) nil "A low contrast color theme for Emacs." single])
 (ztree . [(20170105 208) ((cl-lib (0))) "Text mode directory tree" tar])
)